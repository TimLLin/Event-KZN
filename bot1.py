import telebot
import mainf
import logging
import random
import nltk
from telebot import types

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

bot = telebot.TeleBot(mainf.token_a)

@bot.message_handler(commands=['start'])
def handle_command(message):
    markup_inline = types.InlineKeyboardMarkup()
    bt_1 = types.InlineKeyboardButton(text='–¢–µ–∞—Ç—Äüé≠', callback_data='theatre')
    bt_2 = types.InlineKeyboardButton(text='–ö–∏–Ω–æüé¨', callback_data='cinema')
    bt_3 = types.InlineKeyboardButton(text='–ö–æ–Ω—Ü–µ—Ä—Ç—ãüé∂', callback_data='concert')
    bt_4 = types.InlineKeyboardButton(text='–í—ã—Å—Ç–∞–≤–∫–∏üñº', callback_data='show')
    bt_5 = types.InlineKeyboardButton(text='–°–ª—É—á–∞–π–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—Ç–∏–µüîÆ', callback_data='another')
    markup_inline.add(bt_1,bt_2)
    markup_inline.add(bt_3,bt_4)
    markup_inline.add(bt_5)
    start_message = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {},\n–ú–æ—è —Ü–µ–ª—å –ø–æ–º–æ—á—å –í–∞–º –Ω–∞–π—Ç–∏ —Ç—É—Å—É  –Ω–∞ –≤–µ—á–µ—Ä.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–≤—à—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.'.format(message.chat.first_name)
    bot.send_message(message.chat.id, start_message, reply_markup=markup_inline)

@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(message.chat.id, "*–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ë–æ—Ç–æ–º?*\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –∏–ª–∏ –∏—â–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –í–∞–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ\n\n/start - –∫–æ–º–∞–Ω–¥–∞, –∑–∞–ø—É—Å–∫–∞—é—â–∞—è –±–æ—Ç–∞\n/help - –∫—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞\n/search - —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞,–≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å–∫–æ–º–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –∏ –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –í–∞–º –∫–∞—Ä—Ç–æ—á–∫—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.", parse_mode="Markdown")

@bot.message_handler(commands=['search'])
def search_message(message):
    sent = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∏–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—Ç–∏—è –∏ –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")
    bot.register_next_step_handler(sent, search_event)

@bot.message_handler(content_types=['text'])
def send_text(message):
    if message.text.lower() == '—Å—Ç–∞—Ä—Ç' or message.text.lower() == '–ø—Ä–∏–≤–µ—Ç' or message.text.lower() == "start":
        return handle_command(message)

def search_event(message):
    user_data = message.text.lower()
    check_answer = 0
    markup_inline = types.InlineKeyboardMarkup()
    for i in range(4):
        mainf.dic = mainf.bulka(mainf.url_data[i])
        for elem in list(mainf.dic):
            dist = nltk.edit_distance(user_data,elem.lower())
            if dist/len(user_data) <= 0.4:
                bt_1 = types.InlineKeyboardButton(elem, callback_data=mainf.dic.get(elem))
                markup_inline.add(bt_1)
                bot.send_message(message.chat.id,"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏", reply_markup=markup_inline)
                check_answer += 1
                break
    if check_answer == 0:
        bot.send_message(message.chat.id, "–î–∞–Ω–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—Ç–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /search –µ—â—ë —Ä–∞–∑.")




@bot.callback_query_handler(lambda a: True)
def start_answer(a):
    if a.data == "concert":
        markup_inline = types.InlineKeyboardMarkup()
        mainf.dic = mainf.bulka(mainf.url_data[0])
        mainf.url_querry = mainf.url_data[0]
        for i in range(4):
            bt = types.InlineKeyboardButton(list(mainf.dic)[i], callback_data=mainf.dic.get(list(mainf.dic)[i]))
            markup_inline.add(bt)
        bt_b = types.InlineKeyboardButton('‚û°Ô∏è', callback_data='next')
        bt_menu = types.InlineKeyboardButton('üëâüèªüè†üëàüèª', callback_data='back_main_menu')
        markup_inline.add(bt_menu, bt_b)
        bot.edit_message_reply_markup(a.message.chat.id, a.message.message_id, reply_markup=markup_inline)

    elif a.data == "theatre":
        markup_inline = types.InlineKeyboardMarkup()
        mainf.dic = mainf.bulka(mainf.url_data[2])
        mainf.url_querry = mainf.url_data[2]
        for i in range(4):
            bt = types.InlineKeyboardButton(list(mainf.dic)[i], callback_data=mainf.dic.get(list(mainf.dic)[i]))
            markup_inline.add(bt)
        bt_b = types.InlineKeyboardButton('‚û°Ô∏è', callback_data='next')
        bt_menu = types.InlineKeyboardButton('üëâüèªüè†üëàüèª', callback_data='back_main_menu')
        markup_inline.add(bt_menu, bt_b)
        bot.edit_message_reply_markup(a.message.chat.id,a.message.message_id, reply_markup=markup_inline)

    elif a.data == "show":
        markup_inline = types.InlineKeyboardMarkup()
        mainf.dic = mainf.bulka(mainf.url_data[1])
        mainf.url_querry = mainf.url_data[1]
        for i in range(4):
            bt = types.InlineKeyboardButton(list(mainf.dic)[i], callback_data=mainf.dic.get(list(mainf.dic)[i]))
            markup_inline.add(bt)
        bt_b = types.InlineKeyboardButton('‚û°Ô∏è', callback_data='next')
        bt_menu = types.InlineKeyboardButton('üëâüèªüè†üëàüèª', callback_data='back_main_menu')
        markup_inline.add(bt_menu, bt_b)
        bot.edit_message_reply_markup(a.message.chat.id,a.message.message_id, reply_markup=markup_inline)

    elif a.data == "cinema":
        markup_inline = types.InlineKeyboardMarkup()
        mainf.dic = mainf.bulka(mainf.url_data[3])
        mainf.url_querry = mainf.url_data[3]
        for i in range(4):
            bt = types.InlineKeyboardButton(list(mainf.dic)[i], callback_data=mainf.dic.get(list(mainf.dic)[i]))
            markup_inline.add(bt)
        bt_b = types.InlineKeyboardButton('‚û°Ô∏è', callback_data='next')
        bt_menu = types.InlineKeyboardButton('üëâüèªüè†üëàüèª', callback_data='back_main_menu')
        markup_inline.add(bt_menu, bt_b)
        bot.edit_message_reply_markup(a.message.chat.id,a.message.message_id, reply_markup=markup_inline)

    elif a.data in list(mainf.dic.values()):
            try:
                mainf.querydata = a.data
                mainf.chosen_photo(mainf.querydata)
                markup_inline = types.InlineKeyboardMarkup()
                bt_1 = types.InlineKeyboardButton(text='–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='back_main_menu_w_edit')
                bt_2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back_c')
                bt_3 = types.InlineKeyboardButton(text="–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç", url = str(mainf.querydata))
                markup_inline.add(bt_3)
                markup_inline.add(bt_2, bt_1)
                bot.send_photo(a.message.chat.id, open('img.jpg', 'rb'), mainf.chosen_concert(mainf.querydata), reply_markup=markup_inline)
            except AttributeError:
                markup_inline = types.InlineKeyboardMarkup()
                bt_1 = types.InlineKeyboardButton(text='–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='back_main_menu_w_edit')
                bt_2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back_c')
                bt_3 = types.InlineKeyboardButton(text="–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç", url=str(mainf.querydata))
                markup_inline.add(bt_3)
                markup_inline.add(bt_2, bt_1)
                bot.send_message(a.message.chat.id, mainf.chosen_concert(mainf.querydata),reply_markup=markup_inline)

    elif a.data == 'next':
        mainf.event_index += 5
        markup_inline = types.InlineKeyboardMarkup()
        #mainf.dic = mainf.bulka(mainf.url_querry)
        for i in range(4):
            if mainf.event_index+i < len(mainf.dic):
                bt = types.InlineKeyboardButton(list(mainf.dic)[i+mainf.event_index], callback_data=mainf.dic.get(list(mainf.dic)[i + mainf.event_index]))
                markup_inline.add(bt)
            elif mainf.event_index+i > len(mainf.dic):
                markup_inline1 = types.InlineKeyboardMarkup()
                bt_1 = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main_menu")
                markup_inline1.add(bt_1)
                bot.send_message(a.message.chat.id, "–ö–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ —Ä–µ–º–æ–Ω–¥–∞—Ü–∏–π. –ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ —Ç–æ —á—Ç–æ –∏—Å–∫–∞–ª–∏, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –≤ –¥—Ä—É–≥–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö", reply_markup=markup_inline1 )


        if mainf.event_index + 4 < len(mainf.dic):
            bt_b = types.InlineKeyboardButton("‚û°Ô∏è", callback_data='next')
            bt_menu = types.InlineKeyboardButton('üëâüèªüè†üëàüèª', callback_data='back_main_menu')
            bt_p = types.InlineKeyboardButton("‚¨ÖÔ∏è", callback_data='previous')
            markup_inline.add(bt_p, bt_menu, bt_b)
        else:
            bt_p = types.InlineKeyboardButton("‚¨ÖÔ∏è", callback_data='previous')
            bt_menu = types.InlineKeyboardButton('üëâüèªüè†üëàüèª', callback_data='back_main_menu')
            markup_inline.add(bt_p, bt_menu)
        bot.edit_message_reply_markup(a.message.chat.id, a.message.message_id, reply_markup=markup_inline)

    elif a.data == "previous":
        mainf.event_index -= 5
        markup_inline_back = types.InlineKeyboardMarkup()
        #dic = mainf.bulka(mainf.url_querry)
        for i in range(4):
            if mainf.event_index + i > 0:
                bt = types.InlineKeyboardButton(list(mainf.dic)[i + mainf.event_index],
                                            callback_data=mainf.dic.get(list(mainf.dic)[i + mainf.event_index]))
                markup_inline_back.add(bt)
            elif mainf.event_index + i == 0:
                bt = types.InlineKeyboardButton(list(mainf.dic)[i + mainf.event_index],
                                                callback_data=mainf.dic.get(list(mainf.dic)[i + mainf.event_index]))
                markup_inline_back.add(bt)
        if mainf.event_index > 0:
            bt_b = types.InlineKeyboardButton("‚û°Ô∏è", callback_data='next')
            bt_menu = types.InlineKeyboardButton('üëâüèªüè†üëàüèª', callback_data='back_main_menu')

            bt_p = types.InlineKeyboardButton("‚¨ÖÔ∏è", callback_data='previous')
            markup_inline_back.add(bt_p,bt_menu, bt_b)
        else:
            bt_b = types.InlineKeyboardButton("‚û°Ô∏è", callback_data='next')
            bt_menu = types.InlineKeyboardButton('üëâüèªüè†üëàüèª', callback_data='back_main_menu')
            markup_inline_back.add(bt_menu, bt_b)
        bot.edit_message_reply_markup(a.message.chat.id, a.message.message_id, reply_markup=markup_inline_back)

    elif a.data == "back_main_menu":
        markup_inline = types.InlineKeyboardMarkup()
        bt_1 = types.InlineKeyboardButton(text='–¢–µ–∞—Ç—Äüé≠', callback_data='theatre')
        bt_2 = types.InlineKeyboardButton(text='–ö–∏–Ω–æüé¨', callback_data='cinema')
        bt_3 = types.InlineKeyboardButton(text='–ö–æ–Ω—Ü–µ—Ä—Ç—ãüé∂', callback_data='concert')
        bt_4 = types.InlineKeyboardButton(text='–í—ã—Å—Ç–∞–≤–∫–∏üñº', callback_data='show')
        bt_5 = types.InlineKeyboardButton(text='–°–ª—É—á–∞–π–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—Ç–∏–µüîÆ', callback_data='another')
        markup_inline.add(bt_1, bt_2)
        markup_inline.add(bt_3, bt_4)
        markup_inline.add(bt_5)
        bot.edit_message_reply_markup(a.message.chat.id, a.message.message_id, reply_markup=markup_inline)

    elif a.data == "back_main_menu_w_edit":
        markup_inline = types.InlineKeyboardMarkup()
        bt_1 = types.InlineKeyboardButton(text='–¢–µ–∞—Ç—Äüé≠', callback_data='theatre')
        bt_2 = types.InlineKeyboardButton(text='–ö–∏–Ω–æüé¨', callback_data='cinema')
        bt_3 = types.InlineKeyboardButton(text='–ö–æ–Ω—Ü–µ—Ä—Ç—ãüé∂', callback_data='concert')
        bt_4 = types.InlineKeyboardButton(text='–í—ã—Å—Ç–∞–≤–∫–∏üñº', callback_data='show')
        bt_5 = types.InlineKeyboardButton(text='–°–ª—É—á–∞–π–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—Ç–∏–µüîÆ', callback_data='another')
        markup_inline.add(bt_1, bt_2)
        markup_inline.add(bt_3, bt_4)
        markup_inline.add(bt_5)
        bot.send_message(a.message.chat.id, "–í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–º–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö",
                         reply_markup=markup_inline)

    elif a.data == "back_c":
        bot.delete_message(a.message.chat.id, a.message.message_id)

    elif a.data == "another":
        markup_inline = types.InlineKeyboardMarkup()
        bt_1 = types.InlineKeyboardButton(text='–û–≤–µ–Ω‚ôà', callback_data='quest1')
        bt_2 = types.InlineKeyboardButton(text='–¢–µ–ª–µ—Ü‚ôâ', callback_data='quest1')
        bt_3 = types.InlineKeyboardButton(text='–ë–ª–∏–∑–Ω–µ—Ü—ã‚ôä', callback_data='quest1')
        bt_4 = types.InlineKeyboardButton(text='–†–∞–∫‚ôã', callback_data='quest1')
        bt_5 = types.InlineKeyboardButton(text='–õ–µ–≤‚ôå', callback_data='quest1')
        bt_6 = types.InlineKeyboardButton(text='–î–µ–≤–∞‚ôç', callback_data='quest1')
        bt_7 = types.InlineKeyboardButton(text='–í–µ—Å—ã‚ôé', callback_data='quest1')
        bt_8 = types.InlineKeyboardButton(text='–°–∫–æ—Ä–ø–∏–æ–Ω‚ôè', callback_data='quest1')
        bt_9 = types.InlineKeyboardButton(text='–°—Ç—Ä–µ–ª–µ—Ü‚ôê', callback_data='quest1')
        bt_10 = types.InlineKeyboardButton(text='–ö–æ–∑–µ—Ä–æ–≥‚ôë', callback_data='quest1')
        bt_11 = types.InlineKeyboardButton(text='–í–æ–¥–æ–ª–µ–π‚ôí', callback_data='quest1')
        bt_12 = types.InlineKeyboardButton(text='–†—ã–±—ã‚ôì', callback_data='quest1')
        bt_13 = types.InlineKeyboardButton(text='üëâüèªüè†üëàüèª', callback_data='back_main_menu_w_edit')
        markup_inline.add(bt_1, bt_2, bt_3, bt_4, bt_5, bt_6, bt_7, bt_8, bt_9, bt_10, bt_11, bt_12, bt_13)
        bot.edit_message_text("–ë–æ—Ç –ø–æ–¥–±–µ—Ä–µ—Ç –≤–∞–º —Å–ª—É—á–∞–π–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—Ç–∏–µ. –ù–æ —Å–ø–µ—Ä–≤–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤.\n\n1. –ö—Ç–æ –í—ã –ø–æ –∑–Ω–∞–∫—É –∑–æ–¥–∏–∞–∫–∞?", a.message.chat.id, a.message.message_id, reply_markup=markup_inline)

    elif a.data == 'quest1':
        markup_inline = types.InlineKeyboardMarkup()
        bt_1 = types.InlineKeyboardButton(text='–î–∞', callback_data='quest2_yes')
        bt_2 = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='quest2_no')
        bt_3 = types.InlineKeyboardButton(text='üëâüèªüè†üëàüèª', callback_data='back_main_menu_w_edit')
        markup_inline.add(bt_1, bt_2)
        markup_inline.add(bt_3)
        bot.edit_message_text("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ-–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ, –ø–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É.\n\n2. –í—ã —Å—Ç—Ä–∞–¥–∞–µ—Ç–µ –æ—Ç –Ω–µ—Ä–∞–∑–¥–µ–ª–µ–Ω–Ω–æ–π –ª—é–±–≤–∏?", a.message.chat.id, a.message.message_id, reply_markup=markup_inline)

    elif a.data == 'quest2_yes' or a.data == 'quest2_no':
        choosen = a.data
        markup_inline = types.InlineKeyboardMarkup()
        bt_1 = types.InlineKeyboardButton(text='–î–ê–êü§´', callback_data='quest3')
        bt_2 = types.InlineKeyboardButton(text='–ù–ï–ï–¢üò†', callback_data='quest3')
        bt_3 = types.InlineKeyboardButton(text='–ß—Ç–æ —ç—Ç–æ?üßê', callback_data='quest3')
        bt_4 = types.InlineKeyboardButton(text='üëâüèªüè†üëàüèª', callback_data='back_main_menu_w_edit')
        markup_inline.add(bt_1, bt_2)
        markup_inline.add(bt_3)
        markup_inline.add(bt_4)

        if choosen == 'quest2_yes':
            bot.edit_message_text("–û—Ö –∑–∞–±–µ–π –Ω–∞ –Ω–µ–≥–æ, –ª—é–¥–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã, –∞ –ë–æ—Ç –Ω–∞–≤—Å–µ–≥–¥–∞. –û–¥–Ω–∞–∫–æ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å.\n\n3. –í—ã –≤–µ—Ä–∏—Ç–µ –≤ —Ç–µ–æ—Ä–∏—é –∫–≤–∞–Ω—Ç–æ–≤–æ–≥–æ –±–µ—Å—Å–º–µ—Ç—Ä–∏—è?\n\n–ù–µ—Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è", a.message.chat.id, a.message.message_id, reply_markup=markup_inline)
        elif choosen == 'quest2_no':
            bot.edit_message_text("–ë–æ—Ç –∏—Å–∫—Ä–µ–Ω–Ω–µ —Ä–∞–¥ –∑–∞ —Ç–µ–±—è. –û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å.\n\n3. –í—ã –≤–µ—Ä–∏—Ç–µ –≤ —Ç–µ–æ—Ä–∏—é –∫–≤–∞–Ω—Ç–æ–≤–æ–≥–æ –±–µ—Å—Å–º–µ—Ç—Ä–∏—è?\n\n–ù–µ—Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è", a.message.chat.id, a.message.message_id, reply_markup=markup_inline)

    elif a.data == 'quest3':
        markup_inline = types.InlineKeyboardMarkup()
        bt_1 = types.InlineKeyboardButton(text='üéâ–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—éüéâ', callback_data='another_recomendation')
        markup_inline.add(bt_1)
        bot.edit_message_text("–£—Ä–∞ –ë–æ—Ç –ø–æ–ª—É—á–∏–ª –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —Å–µ–π—á–∞—Å –í—ã –ø–æ–ª—É—á–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—Ç–∏–µ –ª–∏—á–Ω–æ –¥–ª—è –í–∞—Å.", a.message.chat.id, a.message.message_id, reply_markup=markup_inline)

    elif a.data == "another_recomendation":
        if len(mainf.dic) != 0:
            index = random.randint(0, len(mainf.dic)-1)
            a.data = mainf.dic.get(list(mainf.dic)[index])
            start_answer(a)
        else:
            i = random.randint(0, 3)
            mainf.dic = mainf.bulka(mainf.url_data[i])
            index = random.randint(0, len(mainf.dic)-1)
            a.data = mainf.dic.get(list(mainf.dic)[index])
            start_answer(a)



bot.polling(none_stop=True)